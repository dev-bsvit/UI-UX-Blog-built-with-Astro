---
import { getCollection } from 'astro:content';
import LayoutWithSidebar from '../layouts/LayoutWithSidebar.astro';
import PostCard from '../components/PostCard.astro';

// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã
const allPosts = await getCollection('posts', ({ data }) => !data.draft);

// –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
const postsByCategory = allPosts.reduce((acc, post) => {
  const category = post.data.category || '–ó–∞–≥–∞–ª—å–Ω–µ';
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(post);
  return acc;
}, {} as Record<string, typeof allPosts>);

// –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –¥–∞—Ç–µ
Object.keys(postsByCategory).forEach(category => {
  postsByCategory[category].sort((a, b) => 
    new Date(b.data.publishedAt).getTime() - new Date(a.data.publishedAt).getTime()
  );
});

// –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
const categories = Object.entries(postsByCategory).map(([name, posts]) => {
  const totalViews = posts.reduce((sum, post) => {
    const views = JSON.parse(localStorage.getItem('post_views') || '{}');
    return sum + (views[post.slug] || 0);
  }, 0);

  return {
    name,
    slug: name.toLowerCase().replace(/\s+/g, '-'),
    posts,
    count: posts.length,
    description: getCategoryDescription(name),
    icon: getCategoryIcon(name),
    color: getCategoryColor(name),
    totalViews
  };
}).sort((a, b) => b.count - a.count); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç–∞—Ç–µ–π

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function getCategoryDescription(category: string): string {
  const descriptions: Record<string, string> = {
    'Design': '–°—Ç–∞—Ç—Ç—ñ –ø—Ä–æ UI/UX –¥–∏–∑–∞–π–Ω, –ø—Ä–∏–Ω—Ü–∏–ø–∏ –ø—Ä–æ–µ–∫—Ç—É–≤–∞–Ω–Ω—è —Ç–∞ –≤—ñ–∑—É–∞–ª—å–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è',
    'Research': 'UX –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è, –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ –º–µ—Ç–æ–¥–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è',
    'Development': '–í–µ–±-—Ä–æ–∑—Ä–æ–±–∫–∞, —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó —Ç–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞',
    'Tools': '–û–≥–ª—è–¥–∏ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤, –ø–ª–∞–≥—ñ–Ω—ñ–≤ —Ç–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤ –¥–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä—ñ–≤ —ñ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤',
    'Accessibility': '–î–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –≤–µ–±-—Å–∞–π—Ç—ñ–≤, —ñ–Ω–∫–ª—é–∑–∏–≤–Ω–∏–π –¥–∏–∑–∞–π–Ω —Ç–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏ WCAG',
    'Trends': '–°—É—á–∞—Å–Ω—ñ —Ç—Ä–µ–Ω–¥–∏ –≤ –¥–∏–∑–∞–π–Ω—ñ, –Ω–æ–≤—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó —Ç–∞ –º–∞–π–±—É—Ç–Ω—î —ñ–Ω–¥—É—Å—Ç—Ä—ñ—ó',
    'General': '–ó–∞–≥–∞–ª—å–Ω—ñ —Å—Ç–∞—Ç—Ç—ñ –ø—Ä–æ –¥–∏–∑–∞–π–Ω, —Ä–æ–∑—Ä–æ–±–∫—É —Ç–∞ IT —ñ–Ω–¥—É—Å—Ç—Ä—ñ—é',
    '–ó–∞–≥–∞–ª—å–Ω–µ': '–ó–∞–≥–∞–ª—å–Ω—ñ —Å—Ç–∞—Ç—Ç—ñ –ø—Ä–æ –¥–∏–∑–∞–π–Ω, —Ä–æ–∑—Ä–æ–±–∫—É —Ç–∞ IT —ñ–Ω–¥—É—Å—Ç—Ä—ñ—é'
  };
  return descriptions[category] || '–¶—ñ–∫–∞–≤—ñ —Å—Ç–∞—Ç—Ç—ñ —Ç–∞ –∫–æ—Ä–∏—Å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏';
}

function getCategoryIcon(category: string): string {
  const icons: Record<string, string> = {
    'Design': 'üé®',
    'Research': 'üîç',
    'Development': 'üíª',
    'Tools': 'üõ†Ô∏è',
    'Accessibility': '‚ôø',
    'Trends': 'üìà',
    'General': 'üìù',
    '–ó–∞–≥–∞–ª—å–Ω–µ': 'üìù'
  };
  return icons[category] || 'üìÑ';
}

function getCategoryColor(category: string): string {
  const colors: Record<string, string> = {
    'Design': 'from-pink-500 to-rose-500',
    'Research': 'from-blue-500 to-cyan-500',
    'Development': 'from-green-500 to-emerald-500',
    'Tools': 'from-orange-500 to-amber-500',
    'Accessibility': 'from-purple-500 to-violet-500',
    'Trends': 'from-indigo-500 to-blue-500',
    'General': 'from-gray-500 to-slate-500',
    '–ó–∞–≥–∞–ª—å–Ω–µ': 'from-gray-500 to-slate-500'
  };
  return colors[category] || 'from-gray-500 to-slate-500';
}
---

<LayoutWithSidebar 
  title="–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó | UI/UX –ë–ª–æ–≥" 
  description="–ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ —Å—Ç–∞—Ç—Ç—ñ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏: –¥–∏–∑–∞–π–Ω, –¥–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è, —Ä–æ–∑—Ä–æ–±–∫–∞ —Ç–∞ —ñ–Ω—à—ñ —Ç–µ–º–∏" 
  currentPath="/categories"
>
  <!-- Hero —Å–µ–∫—Ü–∏—è -->
  <section class="bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-3xl p-8 mb-8">
    <div class="max-w-4xl">
      <h1 class="text-4xl md:text-5xl font-bold mb-4">
        –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Å—Ç–∞—Ç–µ–π üìÇ
      </h1>
      <p class="text-xl mb-6 opacity-90">
        –ó–Ω–∞–π–¥—ñ—Ç—å —Å—Ç–∞—Ç—Ç—ñ –∑–∞ –≤–∞—à–∏–º–∏ —ñ–Ω—Ç–µ—Ä–µ—Å–∞–º–∏. –£ –Ω–∞—Å {categories.length} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –∑ {allPosts.length} —Å—Ç–∞—Ç—Ç—è–º–∏
      </p>
      <div class="flex flex-wrap gap-4">
        <a href="#overview" class="bg-white text-indigo-600 px-6 py-3 rounded-lg font-medium hover:bg-gray-100 transition-colors">
          –û–≥–ª—è–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
        </a>
        <a href="#all-categories" class="border border-white/30 px-6 py-3 rounded-lg font-medium hover:bg-white/10 transition-colors">
          –í—Å—ñ —Å—Ç–∞—Ç—Ç—ñ
        </a>
      </div>
    </div>
  </section>

  <!-- –û–±–∑–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π -->
  <section id="overview" class="mb-12">
    <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">–û–≥–ª—è–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
      {categories.map((category) => (
        <div class="group cursor-pointer" onclick={`scrollToCategory('${category.slug}')`}>
          <div class={`bg-gradient-to-br ${category.color} p-6 rounded-2xl text-white transform group-hover:scale-105 transition-all duration-300 shadow-lg group-hover:shadow-xl`}>
            <div class="flex items-center justify-between mb-4">
              <div class="text-4xl">{category.icon}</div>
              <div class="text-right">
                <div class="text-2xl font-bold">{category.count}</div>
                <div class="text-sm opacity-80">—Å—Ç–∞—Ç–µ–π</div>
              </div>
            </div>
            <h3 class="text-xl font-bold mb-2">{category.name}</h3>
            <p class="text-sm opacity-90 leading-relaxed">{category.description}</p>
            <div class="mt-4 flex items-center justify-between text-xs opacity-75">
              <span>–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—Ç—ñ</span>
              <svg class="w-4 h-4 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </div>
          </div>
        </div>
      ))}
    </div>
  </section>

  <!-- –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ —Å—Ç–∞—Ç—å—è–º–∏ -->
  <section id="all-categories">
    {categories.map((category) => (
      <div id={category.slug} class="mb-16 scroll-mt-8">
        <div class="flex items-center justify-between mb-6">
          <div class="flex items-center space-x-4">
            <div class="text-3xl">{category.icon}</div>
            <div>
              <h2 class="text-2xl font-bold text-gray-900 dark:text-white">
                {category.name}
              </h2>
              <p class="text-gray-600 dark:text-gray-400 text-sm">
                {category.description}
              </p>
            </div>
          </div>
          <div class="text-center">
            <div class="text-lg font-bold text-gray-900 dark:text-white">{category.count}</div>
            <div class="text-xs text-gray-500 dark:text-gray-400">—Å—Ç–∞—Ç–µ–π</div>
          </div>
        </div>

        {category.posts.length > 0 ? (
          <div class="grid grid-cols-1 gap-4">
            {category.posts.map((post) => (
              <PostCard post={post} />
            ))}
          </div>
        ) : (
          <div class="text-center py-12 text-gray-500 dark:text-gray-400">
            <div class="text-4xl mb-4">üìù</div>
            <p>–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î —Å—Ç–∞—Ç–µ–π –≤ —Ü—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó</p>
            <p class="text-sm">–ê–ª–µ –º–∏ –ø—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ –Ω–æ–≤–∏–º–∏ –º–∞—Ç–µ—Ä—ñ–∞–ª–∞–º–∏!</p>
          </div>
        )}

        {category !== categories[categories.length - 1] && (
          <hr class="mt-12 border-gray-200 dark:border-gray-700" />
        )}
      </div>
    ))}
  </section>

  <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
  <section class="mt-16 p-6 bg-gradient-to-r from-gray-50 to-gray-100 dark:from-gray-800 dark:to-gray-900 rounded-2xl">
    <h3 class="text-lg font-bold text-gray-900 dark:text-white mb-6 text-center">
      –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    </h3>
    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
      <div class="text-center">
        <div class="text-2xl font-bold text-indigo-600 dark:text-indigo-400">
          {categories.length}
        </div>
        <div class="text-sm text-gray-600 dark:text-gray-400">–ö–∞—Ç–µ–≥–æ—Ä—ñ–π</div>
      </div>
      <div class="text-center">
        <div class="text-2xl font-bold text-purple-600 dark:text-purple-400">
          {allPosts.length}
        </div>
        <div class="text-sm text-gray-600 dark:text-gray-400">–°—Ç–∞—Ç–µ–π</div>
      </div>
      <div class="text-center">
        <div class="text-2xl font-bold text-blue-600 dark:text-blue-400">
          {Math.max(...categories.map(c => c.count))}
        </div>
        <div class="text-sm text-gray-600 dark:text-gray-400">–ú–∞–∫—Å –≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó</div>
      </div>
      <div class="text-center">
        <div class="text-2xl font-bold text-green-600 dark:text-green-400">
          {Math.round(allPosts.length / categories.length)}
        </div>
        <div class="text-sm text-gray-600 dark:text-gray-400">–°–µ—Ä–µ–¥–Ω—è –∫-—Å—Ç—å</div>
      </div>
    </div>
  </section>

  <!-- –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º -->
  <div class="fixed bottom-6 right-6 z-40">
    <div class="bg-white dark:bg-gray-800 rounded-full shadow-lg border border-gray-200 dark:border-gray-700 p-2">
      <button 
        id="categories-menu-btn"
        class="w-12 h-12 bg-purple-600 hover:bg-purple-700 text-white rounded-full flex items-center justify-center transition-colors"
        title="–ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä—ñ–π"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
    
    <!-- –í—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é -->
    <div id="categories-dropdown" class="hidden absolute bottom-16 right-0 bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 p-4 w-64">
      <h4 class="font-bold text-gray-900 dark:text-white mb-3">–®–≤–∏–¥–∫–∏–π –ø–µ—Ä–µ—Ö—ñ–¥</h4>
      <div class="space-y-2 max-h-64 overflow-y-auto">
        {categories.map((category) => (
          <button 
            onclick={`scrollToCategory('${category.slug}')`}
            class="w-full text-left px-3 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center space-x-3 transition-colors"
          >
            <span class="text-lg">{category.icon}</span>
            <div class="flex-1">
              <div class="text-sm font-medium text-gray-900 dark:text-white">{category.name}</div>
              <div class="text-xs text-gray-500 dark:text-gray-400">{category.count} —Å—Ç–∞—Ç–µ–π</div>
            </div>
          </button>
        ))}
      </div>
    </div>
  </div>
</LayoutWithSidebar>

<script>
  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  function scrollToCategory(slug: string) {
    const element = document.getElementById(slug);
    if (element) {
      element.scrollIntoView({ 
        behavior: 'smooth', 
        block: 'start' 
      });
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é
      const dropdown = document.getElementById('categories-dropdown');
      dropdown?.classList.add('hidden');
    }
  }

  // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ–π
  (window as any).scrollToCategory = scrollToCategory;

  document.addEventListener('DOMContentLoaded', () => {
    const menuBtn = document.getElementById('categories-menu-btn');
    const dropdown = document.getElementById('categories-dropdown');

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
    menuBtn?.addEventListener('click', (e) => {
      e.stopPropagation();
      dropdown?.classList.toggle('hidden');
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    document.addEventListener('click', (e) => {
      if (!dropdown?.contains(e.target as Node) && !menuBtn?.contains(e.target as Node)) {
        dropdown?.classList.add('hidden');
      }
    });

    // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const categorySlug = entry.target.id;
          // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—Å–≤–µ—Ç–∫—É –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –º–µ–Ω—é
        }
      });
    }, {
      rootMargin: '-20% 0px -70% 0px'
    });

    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    const categoryElements = document.querySelectorAll('[id]');
    categoryElements.forEach(el => {
      if (el.id && el.id !== 'overview' && el.id !== 'all-categories') {
        observer.observe(el);
      }
    });
  });
</script>

<style>
  .scroll-mt-8 {
    scroll-margin-top: 2rem;
  }
  
  /* –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */
  .group:hover .transform {
    transform: translateY(-4px) scale(1.02);
  }
  
  /* –°—Ç–∏–ª–∏ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é */
  #categories-dropdown {
    animation: fadeIn 0.2s ease-out;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style> 