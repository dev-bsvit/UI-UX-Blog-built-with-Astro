---
// CreateArticleModal.astro
---

<!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏ -->
<div id="createArticleModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden flex items-center justify-center p-4">
  <div class="bg-white dark:bg-gray-800 rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
    <div class="p-6">
      <div class="flex justify-between items-center mb-6">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">–°—Ç–≤–æ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—Ç—é</h2>
        <button id="closeModal" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <form id="articleForm" class="space-y-4">
        <div>
          <label for="title" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—Ç—ñ *
          </label>
          <input 
            type="text" 
            id="title" 
            name="title" 
            required
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
            placeholder="–í–≤–µ–¥—ñ—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—Ç—ñ"
          />
        </div>

        <div>
          <label for="description" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            –ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å
          </label>
          <textarea 
            id="description" 
            name="description" 
            rows="2"
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
            placeholder="–ö–æ—Ä–æ—Ç–∫–∏–π –æ–ø–∏—Å —Å—Ç–∞—Ç—Ç—ñ"
          ></textarea>
        </div>

        <div>
          <label for="content" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            –ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–∞—Ç—Ç—ñ *
          </label>
          <textarea 
            id="content" 
            name="content" 
            rows="8" 
            required
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
            placeholder="–í–≤–µ–¥—ñ—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–∞—Ç—Ç—ñ –≤ —Ñ–æ—Ä–º–∞—Ç—ñ Markdown"
          ></textarea>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label for="tags" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              –¢–µ–≥–∏
            </label>
            <input 
              type="text" 
              id="tags" 
              name="tags"
              class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
              placeholder="–¥–∏–∑–∞–π–Ω, ux, ui (—á–µ—Ä–µ–∑ –∫–æ–º—É)"
            />
          </div>

          <div>
            <label for="category" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
              –ö–∞—Ç–µ–≥–æ—Ä—ñ—è
            </label>
            <select 
              id="category" 
              name="category"
              class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
            >
              <option value="Design">–î–∏–∑–∞–π–Ω</option>
              <option value="Research">–î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è</option>
              <option value="Development">–†–æ–∑—Ä–æ–±–∫–∞</option>
              <option value="Tools">–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏</option>
              <option value="General">–ó–∞–≥–∞–ª—å–Ω–µ</option>
            </select>
          </div>
        </div>

        <div>
          <label for="cover" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
            URL –æ–±–∫–ª–∞–¥–∏–Ω–∫–∏
          </label>
          <input 
            type="url" 
            id="cover" 
            name="cover"
            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
            placeholder="https://example.com/image.jpg"
          />
        </div>

        <div class="flex justify-end space-x-4 pt-4">
          <button 
            type="button" 
            id="cancelButton"
            class="px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200"
          >
            –°–∫–∞—Å—É–≤–∞—Ç–∏
          </button>
          <button 
            type="submit"
            class="px-6 py-2 bg-purple-600 hover:bg-purple-700 text-white rounded-lg font-medium transition-colors"
          >
            –û–ø—É–±–ª—ñ–∫—É–≤–∞—Ç–∏
          </button>
        </div>
      </form>

      <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏ -->
      <div id="articleResult" class="hidden mt-6 p-4 border rounded-lg">
        <h3 class="font-bold mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç–∞—Ç—Ç—ñ:</h3>
        <div id="resultContent"></div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('createArticleModal');
    const form = document.getElementById('articleForm');
    const closeModalBtn = document.getElementById('closeModal');
    const cancelBtn = document.getElementById('cancelButton');
    const resultDiv = document.getElementById('articleResult');
    const resultContent = document.getElementById('resultContent');

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞
    window.openModal = function() {
      console.log('openModal called');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
      const user = JSON.parse(localStorage.getItem('user') || 'null');
      console.log('User from localStorage:', user);
      
      if (!user) {
        alert('–î–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó —Å—Ç–∞—Ç–µ–π –ø–æ—Ç—Ä—ñ–±–Ω–æ —É–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ Google');
        return;
      }
      
      if (modal) {
        modal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
      }
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞
    function closeModal() {
      if (modal) {
        modal.classList.add('hidden');
        document.body.style.overflow = 'auto';
        form?.reset();
        resultDiv?.classList.add('hidden');
      }
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∞
    closeModalBtn?.addEventListener('click', closeModal);
    cancelBtn?.addEventListener('click', closeModal);
    
    modal?.addEventListener('click', (e) => {
      if (e.target === modal) {
        closeModal();
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(form as HTMLFormElement);
      const data = {
        title: formData.get('title') as string,
        content: formData.get('content') as string,
        excerpt: formData.get('description') as string,
        tags: (formData.get('tags') as string)?.split(',').map(tag => tag.trim()).filter(tag => tag),
        category: formData.get('category') as string,
        coverImage: formData.get('cover') as string
      };

      try {
        console.log('Sending data to API:', data);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ API endpoint
        const response = await fetch('/api/posts/create', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();
        console.log('API response:', result);

        if (response.ok && result.success) {
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          resultDiv?.classList.remove('hidden');
          
          if (result.filePath) {
            // –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω
            if (resultContent) {
              resultContent.innerHTML = `
                <div class="text-green-600 dark:text-green-400">
                  <p class="font-medium">‚úÖ –°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!</p>
                  <p class="text-sm mt-2">–§–∞–π–ª: ${result.filePath}</p>
                  <p class="text-sm">Slug: ${result.slug}</p>
                  <p class="text-sm mt-2 text-gray-600 dark:text-gray-400">
                    –°—Ç–∞—Ç—å—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
                  </p>
                </div>
              `;
            }
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
              closeModal();
              // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏
              window.location.reload();
            }, 3000);
            
          } else if (result.downloadContent) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            if (resultContent) {
              resultContent.innerHTML = `
                <div class="text-blue-600 dark:text-blue-400">
                  <p class="font-medium">üìÑ –°—Ç–∞—Ç—å—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è</p>
                  <div class="mt-4">
                    <h4 class="font-medium mb-2">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h4>
                    <ol class="list-decimal list-inside text-sm space-y-1">
                      ${result.instructions.map((instruction: string) => `<li>${instruction}</li>`).join('')}
                    </ol>
                  </div>
                  <div class="mt-4">
                    <button onclick="downloadFile('${result.fileName}', \`${result.downloadContent.replace(/`/g, '\\`')}\`)" 
                            class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                      –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
                    </button>
                  </div>
                  <details class="mt-4">
                    <summary class="cursor-pointer text-sm text-gray-600 dark:text-gray-400">–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞</summary>
                    <pre class="mt-2 p-3 bg-gray-100 dark:bg-gray-700 rounded text-xs overflow-x-auto">${result.downloadContent}</pre>
                  </details>
                </div>
              `;
            }
          }
        } else {
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
          if (resultContent) {
            resultContent.innerHTML = `
              <div class="text-red-600 dark:text-red-400">
                <p class="font-medium">‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞—Ç—å–∏</p>
                <p class="text-sm mt-2">${result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}</p>
              </div>
            `;
          }
          resultDiv?.classList.remove('hidden');
        }

      } catch (error) {
        console.error('Error submitting form:', error);
        if (resultContent) {
          resultContent.innerHTML = `
            <div class="text-red-600 dark:text-red-400">
              <p class="font-medium">‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏</p>
              <p class="text-sm mt-2">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</p>
            </div>
          `;
        }
        resultDiv?.classList.remove('hidden');
      }
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    window.downloadFile = function(filename: string, content: string) {
      const blob = new Blob([content], { type: 'text/plain' });
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = filename;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      window.URL.revokeObjectURL(url);
    };
  });
</script>

<style>
  /* –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */
  #createArticleModal {
    animation: fadeIn 0.3s ease-out;
  }

  #createArticleModal > div {
    animation: slideIn 0.3s ease-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes slideIn {
    from { 
      opacity: 0; 
      transform: translateY(-20px) scale(0.95);
    }
    to { 
      opacity: 1; 
      transform: translateY(0) scale(1);
    }
  }

  /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–∫—Ä–æ–ª–ª–±–∞—Ä–∞ */
  .overflow-y-auto::-webkit-scrollbar {
    width: 6px;
  }

  .overflow-y-auto::-webkit-scrollbar-track {
    background: transparent;
  }

  .overflow-y-auto::-webkit-scrollbar-thumb {
    background: #d1d5db;
    border-radius: 3px;
  }

  .dark .overflow-y-auto::-webkit-scrollbar-thumb {
    background: #4b5563;
  }

  .overflow-y-auto::-webkit-scrollbar-thumb:hover {
    background: #9ca3af;
  }

  .dark .overflow-y-auto::-webkit-scrollbar-thumb:hover {
    background: #6b7280;
  }
</style> 